/*
-----------------------------------------------------------------------------
This source file is part of FRAPPER
research.animationsinstitut.de
sourceforge.net/projects/frapper

Copyright (c) 2008-2014 Filmakademie Baden-Wuerttemberg, Institute of Animation 

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free Software
Foundation; version 2.1 of the License.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA 02111-1307, USA, or go to
http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
-----------------------------------------------------------------------------
*/

vertex_program ParticleSystemMaterial_vs cg
{
    source particlesystemnode.cg
    profiles vs_3_0 vp40
    entry_point main_vs
}

fragment_program ParticleSystemMaterial_ps cg
{
    source particlesystemnode.cg
    profiles ps_3_0 fp40
    entry_point main_ps
}

fragment_program ParticleSystemAdvRenderMaterial_ps cg
{
    source particlesystemnode.cg
    profiles ps_3_0 fp40
    entry_point main_advancedRender_ps
}

material ParticleSystemMaterial
{
	technique
	{
	    pass
	    {
			//depth_check off
			//depth_write off
			scene_blend alpha_blend
			alpha_rejection greater_equal 128
			alpha_to_coverage on
	        
			vertex_program_ref ParticleSystemMaterial_vs
	        {
				param_named_auto wvpMat worldviewproj_matrix
				param_named_auto wvMat worldview_matrix
	        }

	        fragment_program_ref ParticleSystemMaterial_ps
	        {
	        }
			
			texture_unit
            {
                texture mask.png 2d			
            }
	    }
	}
}

material AdvancedRender/ParticleSystemMaterial
{
	technique
	{
		scheme MRTPass
	    pass
	    {
			//depth_check off
			//depth_write off
			scene_blend alpha_blend
			alpha_rejection greater_equal 128
			alpha_to_coverage on
	        
			vertex_program_ref ParticleSystemMaterial_vs
	        {
				param_named_auto far far_clip_distance
				param_named_auto wvpMat worldviewproj_matrix
				param_named_auto wvMat worldview_matrix
	        }

	        fragment_program_ref ParticleSystemAdvRenderMaterial_ps
	        {
				param_named_auto far far_clip_distance
				param_named_auto objectId custom 0
	        }
			
			texture_unit
            {
                texture mask.png 2d			
            }
	    }
	}
}