/*
-----------------------------------------------------------------------------
This source file is part of FRAPPER
research.animationsinstitut.de
sourceforge.net/projects/frapper

Copyright (c) 2008-2014 Filmakademie Baden-Wuerttemberg, Institute of Animation 

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free Software
Foundation; version 2.1 of the License.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA 02111-1307, USA, or go to
http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
-----------------------------------------------------------------------------
*/

// vertex_program PointSimpleMaterial_vs hlsl
// {
    // source pointsimpleshader.hlsl
    // target vs_4_0 
    // entry_point main_vs
// }

// fragment_program PointSimpleMaterial_ps hlsl
// {
    // source pointsimpleshader.hlsl
    // target ps_4_0
    // entry_point main_ps
// }
///////////CG
vertex_program PointSimpleMaterial_vsCG cg
{
    source pointsimpleshader.cg
    profiles vs_4_0 
    entry_point main_vs
}

geometry_program PointSimpleMaterial_gsCG cg
{
    source pointsimpleshader.cg
    profiles gs_4_0
    entry_point main_gs
}

fragment_program PointSimpleMaterial_psCG cg
{
    source pointsimpleshader.cg
    profiles ps_4_0
    entry_point main_ps
}

/////////////HLSL
vertex_program PointSimpleMaterial_vsHLSL hlsl
{
    source pointsimpleshader.hlsl
    target vs_4_0 
    entry_point main_vs
}

geometry_program PointSimpleMaterial_gsHLSL hlsl
{
    source pointsimpleshader.hlsl
    target gs_4_0
    entry_point main_gs
}

fragment_program PointSimpleMaterial_psHLSL hlsl
{
    source pointsimpleshader.hlsl
    target ps_4_0
    entry_point main_ps
}



// this is the technique for the scheme "normal" that the SSAO
// compositor uses to render the geometry map
material PointSimpleMaterial
{
	technique
	{
	    pass
	    {
	        vertex_program_ref PointSimpleMaterial_vsCG
	        {
				param_named_auto wvpMat worldviewproj_matrix
	        }
			
			geometry_program_ref PointSimpleMaterial_gsCG
			{
				param_named_auto wvpMat worldviewproj_matrix
				param_named_auto wvpInvMat inverse_worldviewproj_matrix
			}

	        fragment_program_ref PointSimpleMaterial_psCG
	        {
	        }
	    }
	}
}