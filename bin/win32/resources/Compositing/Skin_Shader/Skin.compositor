/*
-----------------------------------------------------------------------------
This source file is part of FRAPPER
research.animationsinstitut.de
sourceforge.net/projects/frapper

Copyright (c) 2008-2014 Filmakademie Baden-Wuerttemberg, Institute of Animation 

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free Software
Foundation; version 2.1 of the License.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA 02111-1307, USA, or go to
http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
-----------------------------------------------------------------------------
*/

compositor SkinCompositor
{
    technique
    {
        texture rt_color target_width target_height PF_R8G8B8A8
        texture rt_depth target_width target_height PF_FLOAT16_R
        texture rt_ids   target_width target_height PF_L8
        texture rt_0 target_width_scaled .5 target_height_scaled .5 PF_R8G8B8A8
        texture rt_1 target_width_scaled .5 target_height_scaled .5 PF_R8G8B8A8
        texture rt_2 target_width_scaled .5 target_height_scaled .5 PF_R8G8B8A8
        texture rt_3 target_width_scaled .5 target_height_scaled .5 PF_R8G8B8A8

		
		target rt_color
		{
			input none
			pass render_quad
			{
				material Skin/ColorPass
			}
		}

		target rt_depth
		{
			input none
			pass render_quad
			{
				material Skin/DepthPass
			}
		}

		target rt_ids
		{
			input none
			pass render_quad
			{
				material Skin/IDsPass
			}
		}
		
        target rt_0
        {
            input none
            pass render_quad
            {
                material Skin/BlurX
                input 0 rt_color
                input 1 rt_depth
                input 2 rt_ids
            }
        }

        target rt_1
        {
            input none
            pass render_quad
            {
                material Skin/BlurY
                input 0 rt_0
                input 1 rt_depth
				input 2 rt_ids
            }
        }
		
        target rt_0
        {
            input none
            pass render_quad
            {
                material Skin/BlurX
                input 0 rt_1
                input 1 rt_depth
				input 2 rt_ids
            }
        }

        target rt_2
        {
            input none
            pass render_quad
            {
                material Skin/BlurY
                input 0 rt_0
                input 1 rt_depth
				input 2 rt_ids
            }
        }
		
        target rt_0
        {
            input none
            pass render_quad
            {
                material Skin/BlurX
                input 0 rt_2
                input 1 rt_depth
				input 2 rt_ids
            }
        }

        target rt_3
        {
            input none
            pass render_quad
            {
                material Skin/BlurY
                input 0 rt_0
                input 1 rt_depth
				input 2 rt_ids
            }
        }
		
		target_output
        {
            input none
            pass render_quad
            {
                material Skin/MixBlend
				input 0 rt_color
                input 1 rt_1
                input 2 rt_2
                input 3 rt_3
                input 4 rt_ids
            }
        }
    }
}
