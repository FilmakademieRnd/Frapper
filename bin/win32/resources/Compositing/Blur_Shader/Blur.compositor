/*
-----------------------------------------------------------------------------
This source file is part of FRAPPER
research.animationsinstitut.de
sourceforge.net/projects/frapper

Copyright (c) 2008-2014 Filmakademie Baden-Wuerttemberg, Institute of Animation 

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free Software
Foundation; version 2.1 of the License.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA 02111-1307, USA, or go to
http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
-----------------------------------------------------------------------------
*/

compositor BoxBlurCompositor
{
    technique
    {
		texture rt_scene target_width target_height PF_R8G8B8A8

		target rt_scene
        {
            // original scene
            input none
			pass render_quad
            {
                // Renders a fullscreen quad with a material
                material Blur/ScenePass
            }
        }

        target_output
        {
            input none
            pass render_quad
            {
				material Blur/BoxBlurMaterial
				input 0 rt_scene
            }
        }
    }
}

compositor GaussBlurCompositor
{
    technique
    {
        // Temporary textures
        texture rt_scene target_width target_height PF_R8G8B8A8
        texture rt0 target_width_scaled 0.5 target_height_scaled 0.5 PF_R8G8B8A8
        texture rt1 target_width_scaled 0.5 target_height_scaled 0.5 PF_R8G8B8A8

        target rt_scene
        {
            // original scene
            input none
			pass render_quad
            {
                // Renders a fullscreen quad with a material
                material Blur/ScenePass
            }
        }

        target rt0
        {
            // Start with clear texture
            input none
            // Horizontal blur pass
            pass render_quad
            {
                // Renders a fullscreen quad with a material
                material Blur/BlurV
                input 0 rt_scene
            }
        }

        target rt1
        {
            // Start with clear texture
            input none
            // Horizontal blur pass
            pass render_quad
            {
                // Renders a fullscreen quad with a material
                material Blur/BlurH
                input 0 rt0
            }
        }

        target_output
        {
            // Start with clear output
            input none
            // Draw a fullscreen quad
            pass render_quad
            {
                // Renders a fullscreen quad with a material
                material Blur/Out
				input 0 rt1
            }
        }
    }
}

