/*
-----------------------------------------------------------------------------
This source file is part of FRAPPER
research.animationsinstitut.de
sourceforge.net/projects/frapper

Copyright (c) 2008-2014 Filmakademie Baden-Wuerttemberg, Institute of Animation 

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free Software
Foundation; version 2.1 of the License.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place - Suite 330, Boston, MA 02111-1307, USA, or go to
http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
-----------------------------------------------------------------------------
*/

fragment_program Sobel/SmoothHorizontalFragmentProgram glsl
{
	source smoothHorizontal.frag
	
	default_params
	{
		param_named inputMap int 0
		param_named pixelSize float4 1.0 1.0 0.0 0.0
		param_named domainRadius float 4.0
	}
}

fragment_program Sobel/SmoothVerticalFragmentProgram glsl
{
	source smoothVertical.frag
	
	default_params
	{
		param_named inputMap int 0
		param_named pixelSize float4 1.0 1.0 0.0 0.0
		param_named domainRadius float 4.0
	}
}

fragment_program Sobel/SobelFragmentProgram glsl
{
	source sobel.frag
	
	default_params
	{
		param_named inputMap int 0
		param_named pixelSize float4 1.0 1.0 0.0 0.0
	}
}


vertex_program Sobel/QuadVertexProgram glsl
{
	source quad.vert
}



material Sobel/SmoothHorizontal
{
	technique
	{
		pass
		{
			depth_check off

			fragment_program_ref Sobel/SmoothHorizontalFragmentProgram
			{
			}
			
			vertex_program_ref Sobel/QuadVertexProgram
			{
			}
	
			texture_unit	//(downScaleMap)
			{
				tex_coord_set 0
				tex_address_mode clamp
				filtering linear linear linear
			}
		}
	}
}

material Sobel/SmoothVertical
{
	technique
	{
		pass
		{
			depth_check off

			fragment_program_ref Sobel/SmoothVerticalFragmentProgram
			{
			}
			
			vertex_program_ref Sobel/QuadVertexProgram
			{
			}

			texture_unit	//(smoothMap0)
			{
				tex_coord_set 0
				tex_address_mode clamp
				filtering linear linear linear
			}
		}
	}
}

material Sobel/SobelMaterial
{
	technique
	{
		pass
		{
			depth_check off

			fragment_program_ref Sobel/SobelFragmentProgram
			{
			}
			
			vertex_program_ref Sobel/QuadVertexProgram
			{
			}	
			
			texture_unit	//(inputMap)
			{
                tex_coord_set 0
				tex_address_mode clamp
				filtering linear linear linear
			}

		}
	}
}
